name: Release CLI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g., 'v1.0.0')"
        required: true

jobs:
  build:
    name: Publish CLI release
    runs-on: "ubuntu-latest"
    defaults:
      run:
        working-directory: ./cli

    steps:
    - uses: actions/checkout@v4

    - uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: |
          pyproject.toml

    - name: Check that versions match
      run: |
        echo "Release tag: [${{ github.event.inputs.version }}] "
        PACKAGE_VERSION=$(uv run python -m vspect package rpzip)
        echo "Package version: [$PACKAGE_VERSION]"
        [[ "${{ github.event.inputs.version }}" == "v$PACKAGE_VERSION" ]] || { exit 1; }

    - name: Build package
      run: |
        uv build

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: ${{ secrets.PYPI_TEST_USERNAME }}
        password: ${{ secrets.PYPI_TEST_PASSWORD }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        packages-dir: cli/dist/

    - name: Publish to Production PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        user: ${{ secrets.PYPI_PROD_USERNAME }}
        password: ${{ secrets.PYPI_PROD_PASSWORD }}
        skip-existing: false
        packages-dir: cli/dist/

    - id: extract-changelog
      uses: sean0x42/markdown-extract@v2.1.0
      with:
        file: cli/CHANGELOG.md
        pattern: ${{ github.event.inputs.version }}

    - name: Write output to file
      run: |
        cat <<'__EOF__' > __CHANGELOG-extracted.md
        ${{ steps.extract-changelog.outputs.markdown }}
        __EOF__

    - uses: ncipollo/release-action@v1
      with:
        tag: cli-${{ github.event.inputs.version }}
        name: "rpzip ${{ github.event.inputs.version }}"
        commit: main
        artifacts: "dist/*.whl,dist/*.tar.gz"
        bodyFile: "__CHANGELOG-extracted.md"
